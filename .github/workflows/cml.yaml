name: model-training
on:
  push:
    branches:
      - 'master'
jobs:
  mlp-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - run: |
          curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo apt install aptitude -y
          sudo aptitude install npm -y
      - uses: iterative/setup-cml@v1
      - name: Setup required packages via pip
        run: |
          pip3 install -r requirements.txt
      - name: Train model
        run: |
          python train.py
      - name: Publish train results
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "# Training Whole Data  " >> train_whole.md
          cat output.txt >> train_whole.md
          cml-publish output_train_whole.png --md >> train_whole.md
          cml-publish output_train_regression.png --md >> train_whole.md
          cml-send-comment train_whole.md
      - name: Test model
        run: |
          python test.py
      - name: Publish test results
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat output.txt >> test.md
          cml-send-comment test.md
#  mlp-independent:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-python@v2
#        with:
#          python-version: '3.8'
#      - run: |
#          curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
#          sudo apt-get install -y nodejs
#          sudo apt install aptitude -y
#          sudo aptitude install npm -y
#      - uses: iterative/setup-cml@v1
#      - name: Setup required packages via pip
#        run: |
#          pip3 install -r requirements.txt
#      - name: Get score from raw data
#        env:
#          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          python pretest.py
#          cat output.txt >> pretest.md
#          cml-send-comment pretest.md
#      - name: Trainig Example
#        env:
#          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          python pretrain.py
#          cat output.txt >> model_summary.md
#          cml-send-comment model_summary.md
#          echo "# Example KFold Results  " >> kfold_example.md
#          echo "## Fold 0  " >> kfold_example.md
#          cml-publish output_train_fold_0.png --md >> kfold_example.md
#          echo "## Fold 1  " >> kfold_example.md
#          cml-publish output_train_fold_1.png --md >> kfold_example.md
#          echo "## Fold 2  " >> kfold_example.md
#          cml-publish output_train_fold_2.png --md >> kfold_example.md
#          echo "## Fold 3  " >> kfold_example.md
#          cml-publish output_train_fold_3.png --md >> kfold_example.md
#          echo "## Fold 4  " >> kfold_example.md
#          cml-publish output_train_fold_4.png --md >> kfold_example.md
#          cml-send-comment kfold_example.md
